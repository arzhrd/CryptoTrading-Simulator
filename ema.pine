
//@version=6
indicator(title="MACD Crossover Signals", shorttitle="MACD Signals", overlay=false)

// Getting inputs
fast_length = input(title="Fast Length", defval=12)
slow_length = input(title="Slow Length", defval=26)
src = input(title="Source", defval=close)
signal_length = input.int(title="Signal Smoothing", minval=1, maxval=50, defval=9, display=display.data_window)
sma_source = input.string(title="Oscillator MA Type", defval="EMA", options=["SMA", "EMA"], display=display.data_window)
sma_signal = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"], display=display.data_window)

// Alert settings
show_buy_signals = input(title="Show Buy Signals", defval=true, group="Signals")
show_sell_signals = input(title="Show Sell Signals", defval=true, group="Signals")
buy_signal_color = input(title="Buy Signal Color", defval=color.green, group="Signals")
sell_signal_color = input(title="Sell Signal Color", defval=color.red, group="Signals")

// Calculating MACD components
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal

// Crossover conditions
bullish_crossover = ta.crossover(macd, signal)  // MACD crosses above Signal
bearish_crossover = ta.crossunder(macd, signal) // MACD crosses below Signal

// Buy Signal: All conditions must be met
buy_signal = bullish_crossover and macd < 0 and signal < 0 and show_buy_signals

// Sell Signal: All conditions must be met
sell_signal = bearish_crossover and macd > 0 and signal > 0 and show_sell_signals

// Plotting MACD components
hline(0, "Zero Line", color=color.new(#787B86, 50))

// Plot histogram with color coding
plot(hist, title="Histogram", style=plot.style_columns, 
     color=(hist >= 0 ? (hist[1] < hist ? #26A69A : #B2DFDB) : (hist[1] < hist ? #FFCDD2 : #FF5252)))

// Plot MACD and Signal lines
plot(macd, title="MACD", color=#2962FF, linewidth=2)
plot(signal, title="Signal", color=#FF6D00, linewidth=2)

// Plot buy and sell signals
plotshape(buy_signal, title="Buy Signal", location=location.bottom, color=buy_signal_color, 
          style=shape.labelup, text="BUY", textcolor=color.white, size=size.small)
plotshape(sell_signal, title="Sell Signal", location=location.top, color=sell_signal_color, 
          style=shape.labeldown, text="SELL", textcolor=color.white, size=size.small)

// Background color change on signals (optional)
bgcolor(buy_signal ? color.new(color.green, 90) : na, title="Buy Background")
bgcolor(sell_signal ? color.new(color.red, 90) : na, title="Sell Background")

// Alert conditions
alertcondition(buy_signal, title="MACD Buy Signal", message="MACD Line crossed above Signal Line - BUY")
alertcondition(sell_signal, title="MACD Sell Signal", message="Signal Line crossed above MACD Line - SELL")

// Additional alert conditions for histogram changes
alertcondition(hist[1] >= 0 and hist < 0, title="Rising to falling", message="The MACD histogram switched from a rising to falling state")
alertcondition(hist[1] <= 0 and hist > 0, title="Falling to rising", message="The MACD histogram switched from a falling to rising state")

// Table to show current values (optional)
if barstate.islast
    var table info_table = table.new(position.top_right, 2, 7, bgcolor=color.white, border_width=1)
    table.cell(info_table, 0, 0, "MACD", text_color=color.black, bgcolor=color.new(#2962FF, 80))
    table.cell(info_table, 1, 0, str.tostring(macd, "#.####"), text_color=color.black)
    table.cell(info_table, 0, 1, "Signal", text_color=color.black, bgcolor=color.new(#FF6D00, 80))
    table.cell(info_table, 1, 1, str.tostring(signal, "#.####"), text_color=color.black)
    table.cell(info_table, 0, 2, "Histogram", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 2, str.tostring(hist, "#.####"), text_color=color.black)
    table.cell(info_table, 0, 3, "200 EMA", text_color=color.black, bgcolor=color.new(color.purple, 80))
    table.cell(info_table, 1, 3, str.tostring(0, "#.##"), text_color=color.black)
    table.cell(info_table, 0, 4, "EMA Dist %", text_color=color.black, bgcolor=color.new(color.blue, 80))
    table.cell(info_table, 1, 4, str.tostring(0, "#.##") + "%", text_color=color.black)
    table.cell(info_table, 0, 5, "ADX", text_color=color.black, bgcolor=color.new(color.red, 80))
    table.cell(info_table, 1, 5, str.tostring(0, "#.##"), text_color=color.black)
    table.cell(info_table, 0, 6, "Status", text_color=color.black, bgcolor=color.yellow)
    table.cell(info_table, 1, 6, macd > signal ? "Bullish" : "Bearish", 
               text_color=color.black, bgcolor=macd > signal ? color.new(color.green, 70) : color.new(color.red, 70))
